filter {
  grok {
    match => [ "message" , "%{IPORHOST:ip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp} - %{NOTSPACE:responsetime}\] %{NUMBER:status} %{QS:request} %{NUMBER:bytes} %{QS:referrer} %{QS:useragent} %{QS:http_x_forwarded_for}" ]
  }
#   ip String,
#   ident String,
#   auth String,
#   logdatetime DateTime,
#   time Float32,
#   status UInt32,
#   request String,
#   path String,
#   params String,
#   bytes UInt32,
#   referrer String,
#   useragent String,
#   http_x_forwarded_for String

  mutate {
    convert => ["status", "integer"]
    convert => ["bytes", "integer"]
    convert => ["time", "float"]
  }

  date {
    match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    remove_field => [ "timestamp" ]
    target => [ "logdatetime" ]
  }

  ruby {
    code => "tstamp = event.get('logdatetime').to_i
             event.set('logdatetime', Time.at(tstamp).strftime('%Y-%m-%d %H:%M:%S'))
             event.set('logdate', Time.at(tstamp).strftime('%Y-%m-%d'))

             request_full = event.get('request')
             if request_full
               method, requestTmp, version = request_full.split(' ', 3)
               path, param = requestTmp.split('?', 2)
               event.set('method', method)
               event.set('path', path)
               event.set('param', param)
               event.set('version', version)
             end"
  }

  prune {
    interpolate => true
    whitelist_names => ["^logdate$" ,"^logdatetime$" ,"^request$" ,"^agent$" ,"^http_x_forwarded_for$" ,"^time$" ,"^auth$" ,"^ident$" ,"^status$" ,"^method" ,"^referrer$" ,"^version$" ,"^path$" ,"^response$","^bytes$","^ip$" ,"^param$" ,"^device$" ,"^useragent$" ]
  }
}

output {
  stdout { codec => rubydebug }

  clickhouse {
    http_hosts => ["http://exampleClickHouse:8123"]
    table => "example_nginx_access"
    request_tolerance => 1
    flush_size => 1000
    pool_max => 1000
  }
}